name: CI to Docker Hub 

on:
  push:
    branches:
      - 'master'
    tags:
      - "v*.*.*"

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_WIF_ID: ${{ secrets.GCP_WIF_ID }}
  IMAGE: asia-northeast1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/simple-whale-demo/simple-whale-demo:${{ github.sha }}

jobs:
  build:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker Layers
        uses: actions/cache@v2.1.0
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - id: auth
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: projects/${{ env.GCP_WIF_ID }}/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: github-action@${{ env.PROJECT_ID }}.iam.gserviceaccount.com
          project_id: ${{ env.PROJECT_ID }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Use gcloud CLI
        run: gcloud info

      - name: Authorize Docker for Artifact Registry
        run: gcloud auth configure-docker asia-northeast1-docker.pkg.dev

          #- name: build
          #  run: docker build . -t ${{ env.IMAGE }}

          #- name: push
          #  run: docker push ${{ env.IMAGE }}

          #- name: Describe my-service-account
          #  run: gcloud iam service-accounts describe 'github-action@radiant-micron-341302.iam.gserviceaccount.com'
          #
      #- 
      #  uses: docker/login-action@v1 
      #  with:
      #    username: ${{ secrets.DOCKER_USERNAME }}
      #    password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./ 
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.IMAGE }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
            # -
      #   name: Image digest
      #   run: echo ${{ steps.docker_build.outputs.digest }}
